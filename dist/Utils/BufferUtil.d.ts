import { DateTimeFormat } from "@/Formats/DateTimeFormat.js";
import { TimeFormat } from "@/Formats/TimeFormat.js";
export declare function readNullTerminatedString(data: Buffer, byteOffset?: number): Buffer;
export declare function toNullTerminatedStringEscaped(data: string | null): Buffer;
export declare function toStringEncoded(value: Buffer | string | null): Buffer;
export declare function toDatetimeEncoded(year?: number, month?: number, day?: number, hours?: number, minutes?: number, seconds?: number, ms?: number): Buffer;
export declare function readDatetimeEncoded(buffer: Buffer): DateTimeFormat;
export declare function toTimeEncoded(hours?: number, minutes?: number, seconds?: number, ms?: number): Buffer;
export declare function readTimeEncoded(buffer: Buffer): TimeFormat;
export declare function toIntEncoded(value: bigint | number | null): Buffer;
export declare function bufferXOR(bufferA: Buffer, bufferB: Buffer): Buffer;
export declare function createUInt8(value: number): Buffer;
export declare function createInt8(value: number): Buffer;
export declare function createUInt16LE(value: number): Buffer;
export declare function createInt16LE(value: number): Buffer;
export declare function createUInt32LE(value: number): Buffer;
export declare function createInt32LE(value: number): Buffer;
export declare function createUInt64LE(value: bigint): Buffer;
export declare function createInt64LE(value: bigint): Buffer;
export declare function getNullPositions(nullBitmap: Buffer, fieldsCount: number, offset: number): number[];
export declare function generateNullBitmap(args: unknown[]): Buffer;
export declare function chunk(buffer: Buffer, size: number): Buffer[];
